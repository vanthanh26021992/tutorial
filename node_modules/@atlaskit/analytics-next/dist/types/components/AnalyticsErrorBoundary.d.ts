import React, { Component, ReactNode } from 'react';
declare type AnalyticsErrorBoundaryErrorInfo = {
    componentStack: string;
};
export interface AnalyticsErrorBoundaryProps {
    /** React component to be wrapped */
    children: ReactNode;
    channel: string;
    data: {};
    ErrorComponent?: React.ComponentType;
    onError?: (error: Error, info?: AnalyticsErrorBoundaryErrorInfo) => void;
}
declare type AnalyticsErrorBoundaryState = {
    hasError: boolean;
};
/**
 *  @deprecated
 */
export default class AnalyticsErrorBoundary extends Component<AnalyticsErrorBoundaryProps, AnalyticsErrorBoundaryState> {
    constructor(props: AnalyticsErrorBoundaryProps);
    componentDidCatch(error: Error, info?: AnalyticsErrorBoundaryErrorInfo): void;
    render(): JSX.Element | null;
}
export {};
