/// <reference types="react" />
import { CSSObject } from '@emotion/react';
import { InteractionState, ThemeProps, ThemeTokens } from './custom-theme-button-types';
export declare function getCustomCss({ appearance, spacing, mode, isSelected, shouldFitContainer, iconIsOnlyChild, isLoading, state, }: ThemeProps): CSSObject;
export declare function getSpecifiers(styles: CSSObject): CSSObject;
export declare function defaultThemeFn(current: (values: ThemeProps) => ThemeTokens, values: ThemeProps): ThemeTokens;
declare const Theme: {
    Consumer: import("react").ComponentType<{
        children: (tokens: ThemeTokens) => import("react").ReactNode;
    } & Partial<import("./custom-theme-button-types").CustomThemeButtonProps> & {
        state: InteractionState;
        iconIsOnlyChild?: boolean | undefined;
        mode?: import("@atlaskit/theme").ThemeModes | undefined;
    }>;
    Provider: import("react").ComponentType<{
        children?: import("react").ReactNode;
        value?: import("@atlaskit/theme/components").ThemeProp<ThemeTokens, ThemeProps> | undefined;
    }>;
    useTheme: (props: ThemeProps) => ThemeTokens;
};
export default Theme;
