import type { ShapeScaleTokenSchema } from '../types';
/**
 * Types are inferred from the base tokens below
 */
export declare type ShapePaletteToken = BaseRadiusToken | BaseSizeToken;
export declare type BaseSizeToken = keyof typeof baseSizeTokens;
export declare type BaseRadiusToken = keyof typeof baseRadiusTokens;
declare const baseSizeTokens: {
    readonly Size0: {
        readonly value: "0";
        readonly attributes: {
            readonly group: "shape";
        };
    };
    readonly Size050: {
        readonly value: "0.0625rem";
        readonly attributes: {
            readonly group: "shape";
        };
    };
    readonly Size100: {
        readonly value: "0.125rem";
        readonly attributes: {
            readonly group: "shape";
        };
    };
};
declare const baseRadiusTokens: {
    readonly Radius050: {
        readonly value: "0.125rem";
        readonly attributes: {
            readonly group: "shape";
        };
    };
    readonly Radius100: {
        readonly value: "0.25rem";
        readonly attributes: {
            readonly group: "shape";
        };
    };
    readonly Radius200: {
        readonly value: "0.5rem";
        readonly attributes: {
            readonly group: "shape";
        };
    };
    readonly Radius300: {
        readonly value: "0.75rem";
        readonly attributes: {
            readonly group: "shape";
        };
    };
    readonly Radius400: {
        readonly value: "1rem";
        readonly attributes: {
            readonly group: "shape";
        };
    };
    readonly RadiusCircle: {
        readonly value: "50%";
        readonly attributes: {
            readonly group: "shape";
        };
    };
};
declare const shapePalette: ShapeScaleTokenSchema<BaseRadiusToken, BaseSizeToken>;
export default shapePalette;
